{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kemom\\\\Downloads\\\\part2\\\\task5\\\\src\\\\components\\\\UI\\\\Avatar.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Avatar as MuiAvatar } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledAvatar = styled(MuiAvatar)`\n  width: ${props => props.size || '40px'};\n  height: ${props => props.size || '40px'};\n  cursor: pointer;\n  border: 2px solid #fff;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n  \n  &:hover {\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\n  }\n`;\n_c = StyledAvatar;\nconst Avatar = ({\n  src,\n  alt,\n  size\n}) => {\n  // If no image provided, use first letter of name as avatar\n  const getInitials = name => {\n    if (!name) return 'U';\n    return name.charAt(0).toUpperCase();\n  };\n  return /*#__PURE__*/_jsxDEV(StyledAvatar, {\n    src: src,\n    alt: alt || 'User',\n    size: size,\n    children: !src && getInitials(alt)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Avatar;\nexport default Avatar;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledAvatar\");\n$RefreshReg$(_c2, \"Avatar\");","map":{"version":3,"names":["React","styled","Avatar","MuiAvatar","jsxDEV","_jsxDEV","StyledAvatar","props","size","_c","src","alt","getInitials","name","charAt","toUpperCase","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/kemom/Downloads/part2/task5/src/components/UI/Avatar.jsx"],"sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Avatar as MuiAvatar } from '@mui/material';\r\n\r\nconst StyledAvatar = styled(MuiAvatar)`\r\n  width: ${props => props.size || '40px'};\r\n  height: ${props => props.size || '40px'};\r\n  cursor: pointer;\r\n  border: 2px solid #fff;\r\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\r\n  \r\n  &:hover {\r\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nconst Avatar = ({ src, alt, size }) => {\r\n  // If no image provided, use first letter of name as avatar\r\n  const getInitials = name => {\r\n    if (!name) return 'U';\r\n    return name.charAt(0).toUpperCase();\r\n  };\r\n\r\n  return (\r\n    <StyledAvatar \r\n      src={src} \r\n      alt={alt || 'User'} \r\n      size={size}\r\n    >\r\n      {!src && getInitials(alt)}\r\n    </StyledAvatar>\r\n  );\r\n};\r\n\r\nexport default Avatar; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,MAAM,IAAIC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,MAAMC,YAAY,GAAGL,MAAM,CAACE,SAAS,CAAC;AACtC,WAAWI,KAAK,IAAIA,KAAK,CAACC,IAAI,IAAI,MAAM;AACxC,YAAYD,KAAK,IAAIA,KAAK,CAACC,IAAI,IAAI,MAAM;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAVIH,YAAY;AAYlB,MAAMJ,MAAM,GAAGA,CAAC;EAAEQ,GAAG;EAAEC,GAAG;EAAEH;AAAK,CAAC,KAAK;EACrC;EACA,MAAMI,WAAW,GAAGC,IAAI,IAAI;IAC1B,IAAI,CAACA,IAAI,EAAE,OAAO,GAAG;IACrB,OAAOA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;EACrC,CAAC;EAED,oBACEV,OAAA,CAACC,YAAY;IACXI,GAAG,EAAEA,GAAI;IACTC,GAAG,EAAEA,GAAG,IAAI,MAAO;IACnBH,IAAI,EAAEA,IAAK;IAAAQ,QAAA,EAEV,CAACN,GAAG,IAAIE,WAAW,CAACD,GAAG;EAAC;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEnB,CAAC;AAACC,GAAA,GAhBInB,MAAM;AAkBZ,eAAeA,MAAM;AAAC,IAAAO,EAAA,EAAAY,GAAA;AAAAC,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}