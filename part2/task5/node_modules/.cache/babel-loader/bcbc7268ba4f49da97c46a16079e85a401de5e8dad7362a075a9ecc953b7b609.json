{"ast":null,"code":"// Mock restaurant data\nconst restaurants = [{\n  id: 1,\n  name: \"Mama's Kitchen\",\n  rating: 4.7,\n  image: \"https://images.unsplash.com/photo-1555396273-367ea4eb4db5?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1074&q=80\",\n  cuisineType: \"American\"\n}, {\n  id: 2,\n  name: \"The Burger Joint\",\n  rating: 4.6,\n  image: \"https://images.unsplash.com/photo-1514933651103-005eec06c04b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1074&q=80\",\n  cuisineType: \"American\"\n}, {\n  id: 3,\n  name: \"Pasta Express\",\n  rating: 4.5,\n  image: \"https://images.unsplash.com/photo-1551183053-bf91a1d81141?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1032&q=80\",\n  cuisineType: \"Italian\"\n}, {\n  id: 4,\n  name: \"Taco Fiesta\",\n  rating: 4.8,\n  image: \"https://images.unsplash.com/photo-1571091655789-405eb7a3a3a8?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1172&q=80\",\n  cuisineType: \"Mexican\"\n}];\n\n// Mock delay to simulate API request\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\n// Mock API functions\nexport const fetchRestaurants = async () => {\n  // Simulate network delay\n  await delay(800);\n  return [...restaurants];\n};\nexport const updateRestaurantRating = async (restaurantId, newRating) => {\n  // Simulate network delay\n  await delay(500);\n\n  // Find restaurant and update rating\n  const restaurant = restaurants.find(r => r.id === restaurantId);\n  if (restaurant) {\n    restaurant.rating = newRating;\n    return {\n      success: true,\n      restaurant\n    };\n  }\n  return {\n    success: false,\n    error: \"Restaurant not found\"\n  };\n};","map":{"version":3,"names":["restaurants","id","name","rating","image","cuisineType","delay","ms","Promise","resolve","setTimeout","fetchRestaurants","updateRestaurantRating","restaurantId","newRating","restaurant","find","r","success","error"],"sources":["C:/Users/kemom/Downloads/part2/task5/src/api/api.js"],"sourcesContent":["// Mock restaurant data\r\nconst restaurants = [\r\n  {\r\n    id: 1,\r\n    name: \"Mama's Kitchen\",\r\n    rating: 4.7,\r\n    image: \"https://images.unsplash.com/photo-1555396273-367ea4eb4db5?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1074&q=80\",\r\n    cuisineType: \"American\"\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"The Burger Joint\",\r\n    rating: 4.6,\r\n    image: \"https://images.unsplash.com/photo-1514933651103-005eec06c04b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1074&q=80\",\r\n    cuisineType: \"American\"\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Pasta Express\",\r\n    rating: 4.5,\r\n    image: \"https://images.unsplash.com/photo-1551183053-bf91a1d81141?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1032&q=80\",\r\n    cuisineType: \"Italian\"\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Taco Fiesta\",\r\n    rating: 4.8,\r\n    image: \"https://images.unsplash.com/photo-1571091655789-405eb7a3a3a8?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1172&q=80\",\r\n    cuisineType: \"Mexican\"\r\n  }\r\n];\r\n\r\n// Mock delay to simulate API request\r\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n// Mock API functions\r\nexport const fetchRestaurants = async () => {\r\n  // Simulate network delay\r\n  await delay(800);\r\n  return [...restaurants];\r\n};\r\n\r\nexport const updateRestaurantRating = async (restaurantId, newRating) => {\r\n  // Simulate network delay\r\n  await delay(500);\r\n  \r\n  // Find restaurant and update rating\r\n  const restaurant = restaurants.find(r => r.id === restaurantId);\r\n  if (restaurant) {\r\n    restaurant.rating = newRating;\r\n    return { success: true, restaurant };\r\n  }\r\n  \r\n  return { success: false, error: \"Restaurant not found\" };\r\n}; "],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAG,CAClB;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,gBAAgB;EACtBC,MAAM,EAAE,GAAG;EACXC,KAAK,EAAE,qKAAqK;EAC5KC,WAAW,EAAE;AACf,CAAC,EACD;EACEJ,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,kBAAkB;EACxBC,MAAM,EAAE,GAAG;EACXC,KAAK,EAAE,wKAAwK;EAC/KC,WAAW,EAAE;AACf,CAAC,EACD;EACEJ,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,eAAe;EACrBC,MAAM,EAAE,GAAG;EACXC,KAAK,EAAE,qKAAqK;EAC5KC,WAAW,EAAE;AACf,CAAC,EACD;EACEJ,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,aAAa;EACnBC,MAAM,EAAE,GAAG;EACXC,KAAK,EAAE,wKAAwK;EAC/KC,WAAW,EAAE;AACf,CAAC,CACF;;AAED;AACA,MAAMC,KAAK,GAAIC,EAAE,IAAK,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAEF,EAAE,CAAC,CAAC;;AAErE;AACA,OAAO,MAAMI,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EAC1C;EACA,MAAML,KAAK,CAAC,GAAG,CAAC;EAChB,OAAO,CAAC,GAAGN,WAAW,CAAC;AACzB,CAAC;AAED,OAAO,MAAMY,sBAAsB,GAAG,MAAAA,CAAOC,YAAY,EAAEC,SAAS,KAAK;EACvE;EACA,MAAMR,KAAK,CAAC,GAAG,CAAC;;EAEhB;EACA,MAAMS,UAAU,GAAGf,WAAW,CAACgB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAAChB,EAAE,KAAKY,YAAY,CAAC;EAC/D,IAAIE,UAAU,EAAE;IACdA,UAAU,CAACZ,MAAM,GAAGW,SAAS;IAC7B,OAAO;MAAEI,OAAO,EAAE,IAAI;MAAEH;IAAW,CAAC;EACtC;EAEA,OAAO;IAAEG,OAAO,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAuB,CAAC;AAC1D,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}