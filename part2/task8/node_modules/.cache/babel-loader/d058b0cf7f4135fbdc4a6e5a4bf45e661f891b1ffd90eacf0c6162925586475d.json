{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kemom\\\\Downloads\\\\part2\\\\task8\\\\src\\\\components\\\\Team.tsx\",\n  _s = $RefreshSig$();\nimport React, { memo, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Using memo to prevent unnecessary re-renders\nconst Team = /*#__PURE__*/_s(/*#__PURE__*/memo(_c = _s(({\n  employees\n}) => {\n  _s();\n  console.log('Rendering Team component');\n\n  // Memoize expensive calculations\n  const totalSalary = useMemo(() => {\n    console.log('Calculating total salary...');\n    return employees.reduce((sum, employee) => sum + employee.salary, 0);\n  }, [employees]);\n  const averageSalary = useMemo(() => {\n    console.log('Calculating average salary...');\n    return totalSalary / employees.length;\n  }, [totalSalary, employees.length]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"team-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Team Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total team members: \", employees.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total salary: $\", totalSalary]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Average salary: $\", averageSalary.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Team Members\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"team-list\",\n      children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employee-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [employee.name, \" \", employee.surname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Position: \", employee.position]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Salary: $\", employee.salary]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, employee.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}, \"+S8KQ+zNskKJkAyVjWcrMkNtN1M=\")), \"+S8KQ+zNskKJkAyVjWcrMkNtN1M=\");\n_c2 = Team;\nexport default Team;\nvar _c, _c2;\n$RefreshReg$(_c, \"Team$memo\");\n$RefreshReg$(_c2, \"Team\");","map":{"version":3,"names":["React","memo","useMemo","jsxDEV","_jsxDEV","Team","_s","_c","employees","console","log","totalSalary","reduce","sum","employee","salary","averageSalary","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toFixed","map","name","surname","position","id","_c2","$RefreshReg$"],"sources":["C:/Users/kemom/Downloads/part2/task8/src/components/Team.tsx"],"sourcesContent":["import React, { memo, useMemo } from 'react';\r\n\r\ninterface Employee {\r\n  id: number;\r\n  name: string;\r\n  surname: string;\r\n  salary: number;\r\n  position: string;\r\n}\r\n\r\ninterface TeamProps {\r\n  employees: Employee[];\r\n}\r\n\r\n// Using memo to prevent unnecessary re-renders\r\nconst Team = memo(({ employees }: TeamProps) => {\r\n  console.log('Rendering Team component');\r\n  \r\n  // Memoize expensive calculations\r\n  const totalSalary = useMemo(() => {\r\n    console.log('Calculating total salary...');\r\n    return employees.reduce((sum, employee) => sum + employee.salary, 0);\r\n  }, [employees]);\r\n  \r\n  const averageSalary = useMemo(() => {\r\n    console.log('Calculating average salary...');\r\n    return totalSalary / employees.length;\r\n  }, [totalSalary, employees.length]);\r\n  \r\n  return (\r\n    <div className=\"team-section\">\r\n      <h2>Team Information</h2>\r\n      <div className=\"team-stats\">\r\n        <p>Total team members: {employees.length}</p>\r\n        <p>Total salary: ${totalSalary}</p>\r\n        <p>Average salary: ${averageSalary.toFixed(2)}</p>\r\n      </div>\r\n      \r\n      <h3>Team Members</h3>\r\n      <div className=\"team-list\">\r\n        {employees.map(employee => (\r\n          <div key={employee.id} className=\"employee-item\">\r\n            <p><strong>{employee.name} {employee.surname}</strong></p>\r\n            <p>Position: {employee.position}</p>\r\n            <p>Salary: ${employee.salary}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Team; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}