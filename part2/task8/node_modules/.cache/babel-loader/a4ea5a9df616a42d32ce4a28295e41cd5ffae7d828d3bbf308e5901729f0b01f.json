{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kemom\\\\Downloads\\\\part2\\\\task8\\\\src\\\\components\\\\BestEmployees.tsx\";\nimport React, { memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Using memo to prevent unnecessary re-renders\nconst BestEmployees = /*#__PURE__*/memo(_c = ({\n  year,\n  getBestEmployee\n}) => {\n  console.log('Rendering BestEmployees component');\n  const bestEmployee = getBestEmployee(year);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"best-employee-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Best Employee for \", year]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employee-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [bestEmployee.name, \" \", bestEmployee.surname]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Position: \", bestEmployee.position]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Salary: $\", bestEmployee.salary]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}, (prevProps, nextProps) => {\n  // Custom comparison function for memo\n  // Only re-render if the year changes, since that's the only prop that affects the output\n  return prevProps.year === nextProps.year;\n});\n_c2 = BestEmployees;\nexport default BestEmployees;\nvar _c, _c2;\n$RefreshReg$(_c, \"BestEmployees$memo\");\n$RefreshReg$(_c2, \"BestEmployees\");","map":{"version":3,"names":["React","memo","jsxDEV","_jsxDEV","BestEmployees","_c","year","getBestEmployee","console","log","bestEmployee","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","surname","position","salary","prevProps","nextProps","_c2","$RefreshReg$"],"sources":["C:/Users/kemom/Downloads/part2/task8/src/components/BestEmployees.tsx"],"sourcesContent":["import React, { memo } from 'react';\r\n\r\ninterface Employee {\r\n  id: number;\r\n  name: string;\r\n  surname: string;\r\n  salary: number;\r\n  position: string;\r\n}\r\n\r\ninterface BestEmployeesProps {\r\n  year: number;\r\n  getBestEmployee: (year: number) => Employee;\r\n}\r\n\r\n// Using memo to prevent unnecessary re-renders\r\nconst BestEmployees = memo(({ year, getBestEmployee }: BestEmployeesProps) => {\r\n  console.log('Rendering BestEmployees component');\r\n  \r\n  const bestEmployee = getBestEmployee(year);\r\n  \r\n  return (\r\n    <div className=\"best-employee-section\">\r\n      <h2>Best Employee for {year}</h2>\r\n      <div className=\"employee-card\">\r\n        <h3>{bestEmployee.name} {bestEmployee.surname}</h3>\r\n        <p>Position: {bestEmployee.position}</p>\r\n        <p>Salary: ${bestEmployee.salary}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}, (prevProps, nextProps) => {\r\n  // Custom comparison function for memo\r\n  // Only re-render if the year changes, since that's the only prop that affects the output\r\n  return prevProps.year === nextProps.year;\r\n});\r\n\r\nexport default BestEmployees; "],"mappings":";AAAA,OAAOA,KAAK,IAAIC,IAAI,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAepC;AACA,MAAMC,aAAa,gBAAGH,IAAI,CAAAI,EAAA,GAACA,CAAC;EAAEC,IAAI;EAAEC;AAAoC,CAAC,KAAK;EAC5EC,OAAO,CAACC,GAAG,CAAC,mCAAmC,CAAC;EAEhD,MAAMC,YAAY,GAAGH,eAAe,CAACD,IAAI,CAAC;EAE1C,oBACEH,OAAA;IAAKQ,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCT,OAAA;MAAAS,QAAA,GAAI,oBAAkB,EAACN,IAAI;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACjCb,OAAA;MAAKQ,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BT,OAAA;QAAAS,QAAA,GAAKF,YAAY,CAACO,IAAI,EAAC,GAAC,EAACP,YAAY,CAACQ,OAAO;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnDb,OAAA;QAAAS,QAAA,GAAG,YAAU,EAACF,YAAY,CAACS,QAAQ;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxCb,OAAA;QAAAS,QAAA,GAAG,WAAS,EAACF,YAAY,CAACU,MAAM;MAAA;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC,EAAE,CAACK,SAAS,EAAEC,SAAS,KAAK;EAC3B;EACA;EACA,OAAOD,SAAS,CAACf,IAAI,KAAKgB,SAAS,CAAChB,IAAI;AAC1C,CAAC,CAAC;AAACiB,GAAA,GAnBGnB,aAAa;AAqBnB,eAAeA,aAAa;AAAC,IAAAC,EAAA,EAAAkB,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}